
# grafana
# see: https://grafana.com/tutorials/run-grafana-behind-a-proxy

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
    server_name marvin.thgttg.com;
    listen 443 ssl;
    gzip off;

    # prometheus
    location / {
        proxy_pass http://127.0.0.1:9070;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # grafana
    location /grafana/ {
        proxy_set_header Host $http_host;
        proxy_pass http://127.0.0.1:3000;
    }

    # grafana ws api
    location /grafana/api/live/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $http_host;
        proxy_pass http://127.0.0.1:3000;
    }

    ssl_certificate /etc/letsencrypt/live/marvin.thgttg.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/marvin.thgttg.com/privkey.pem;
}

server {

    server_name marvin.thgttg.com;
    listen 80;
    listen [::]:80;

    # certbot challenges
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/html;
    }

    # nginx basic metrics
    location /basic_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow ::1;
        deny all;
    }

    # tls redirect
    if ($host = marvin.thgttg.com) {
        return 301 https://$host$request_uri;
    }
    return 404;
}
